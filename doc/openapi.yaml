openapi: 3.0.3
info:
  title: OAuth2 Authorization API
  version: 1.0.0

paths:
  /authorize:
    get:
      summary: Authorization Endpoint
      description: |
        Initiates the OAuth2 authorization flow. Redirects to the `redirect_uri` with the authorization code or error details.
      parameters:
        - name: response_type
          in: query
          required: true
          description: Type of authorization response (e.g., "code" for Authorization Code flow).
          schema:
            type: string
            enum: [code, token]
            x-comparison-parameter: this == \authorize-get-client_id
        - name: client_id
          in: query
          required: true
          description: Client identifier issued to the application making the request.
          schema:
            type: string
        - name: redirect_uri
          in: query
          required: true
          description: The URI to redirect the user to after authorization.
          schema:
            type: string
            format: uri
        - name: scope
          in: query
          required: false
          description: Space-separated list of scopes.
          schema:
            type: string
        - name: state
          in: query
          required: false
          x-conditional-required: This parameter is required if scope is present.
          description: An opaque value to maintain state between the request and callback.
          schema:
            type: string
        - name: request
          in: query
          required: true
          description: The jwt MUST follow the JWTRequest schema
          x-signature: true
          schema:
            type: string
            pattern: '[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.?[A-Za-z0-9-_.+\/=]*'

      responses:
        '302':
          description: Redirects to the `redirect_uri` with authorization parameters.
          headers:
            Location:
              description: The URL to which the user is redirected, including query parameters such as `code` or `error`.
              required: true
              schema:
                type: string
                format: uri
            Content-Type:
              description: Must be app
              schema:
                type: string
          content:
            application/x-www-form-urlencoded:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: The authorization code to be exchanged for an access token (only present if `response_type=code`).
                  state:
                    type: string
                    description: The `state` parameter if provided in the request.
                  error:
                    type: string
                    description: Error code if authorization fails (e.g., `access_denied`, `invalid_request`).
                  error_description:
                    type: string
                    description: Description of the error if authorization fails.
    post:
      summary: Authorization request using POST
      description: |
        Sends an authorization request with JWT as a form parameter.
        The JWT contains parameters like `iss`, `sub`, and `aud`.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                  - response_type
                  - request
              properties:
                response_type:
                  type: string
                  description: Type of authorization response (e.g., "code" for Authorization Code flow).
                  enum: [code, token]
                client_id:
                  description: Client identifier issued to the application making the request.
                  type: string
                redirect_uri:
                  description: The URI to redirect the user to after authorization.
                  type: string
                scope:
                  description: Space-separated list of scopes.
                  type: string
                state:
                  description: An opaque value to maintain state between the request and callback.
                  type: string
                request:
                  description: The jwt MUST follow the JWTRequest schema
                  type: string
                  pattern: '[A-Za-z0-9-_=]+\.[A-Za-z0-9-_=]+\.?[A-Za-z0-9-_.+\/=]*'
                  x-signature: true
      responses:
        '200':
          description: Successful authorization response
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid request
  /.well-known/openid-federation:
    get:
      summary: Retrieve OpenID Connect Federation Metadata
      description: |
        This endpoint provides metadata for the OpenID Connect Federation, containing information such as supported algorithms, federation entity ID, and other configuration details.
      parameters: []
      responses:
        '200':
          description: Successful response with OpenID Federation metadata
          content:
            application/entity-statement+jwt:
              schema:
                type: object
                required:
                  - jwt
                properties:
                  jwt:
                    type: object
                    description: JWT containing federation metadata
                    required:
                      - header
                    properties:
                      header:
                        type: object
                        description: Header section of the JWT
                        required:
                          - alg
                          - typ
                        properties:
                          alg:
                            type: string
                            description: Algorithm used to sign the JWT (e.g., RS256, ES256).
                            example: RS256
                          typ:
                            type: string
                            description: Type of the token, usually "JWT".
                            example: JWT
                          kid:
                            type: string
                            description: Key ID hint used to select the public key to verify the JWT.
                            example: "1b94c"
                      payload:
                        type: object
                        description: Payload section of the JWT containing federation claims
                        properties:
                          iss:
                            type: string
                            format: uri
                            pattern: https
                            description: Issuer identifier for the federation.
                          sub:
                            type: string
                            description: Subject identifier for the federation entity.
                          aud:
                            type: string
                            description: Audience that the JWT is intended for.
                          exp:
                            type: integer
                            format: int64
                            description: Expiration time of the JWT as a Unix timestamp.
                          iat:
                            type: integer
                            format: int64
                            description: Issued-at time of the JWT as a Unix timestamp.
                          federation_entity_id:
                            type: string
                            format: uri
                            description: Unique identifier for the federation entity.
                        x-requirements:
                              description: |
                                `iss` must be equal to `sub`.
                      signature:
                        type: string
                        description: The signature section of the JWT, encoded in Base64.
                        example: "sQ5c3G...lZG8="
        '404':
          description: Not found - if the `.well-known` endpoint is unavailable
        '500':
          description: Internal server error
components:
  schemas:
    JWTRequest:
      type: object
      required:
        - header
        - payload
        - signature
      properties:
        header:
          type: object
          description: Header section of the JWT
          required:
            - alg
            - typ
          properties:
            alg:
              type: string
              description: Algorithm used to sign the JWT (e.g., RS256, ES256).
              example: RS256
            typ:
              type: string
              description: Type of the token, usually "JWT".
              example: JWT
            kid:
              type: string
              description: Key ID hint used to select the public key to verify the JWT.
              example: "1b94c"
        payload:
          type: object
          description: Payload section of the JWT containing federation claims
          required:
            - iss
            - sub
          properties:
            iss:
              type: string
              format: uri
              pattern: https
              description: Issuer identifier for the federation.
            sub:
              type: string
              description: Subject identifier for the federation entity.
            aud:
              type: string
              description: Audience that the JWT is intended for.
            exp:
              type: integer
              format: int64
              description: Expiration time of the JWT as a Unix timestamp.
            iat:
              type: integer
              format: int64
              description: Issued-at time of the JWT as a Unix timestamp.
            federation_entity_id:
              type: string
              format: uri
              description: Unique identifier for the federation entity.
          x-requirements:
                description: |
                  `iss` must be equal to `sub`.
        signature:
          type: string
          description: The signature section of the JWT, encoded in Base64.
          example: "sQ5c3G...lZG8="
    JWTParameters:
      type: object
      properties:
        header:
          type: object
        iss:
          type: string
          description: Issuer of the JWT
        sub:
          type: string
          description: Subject of the JWT
        aud:
          type: string
          description: Audience for the JWT
        exp:
          type: integer
          format: int64
          description: Expiration time of the JWT
        # Add any other JWT fields needed
      required:
        - iss
        - aud
        - exp
    jwt:
                    type: object
                    description: JWT containing federation metadata
                    required:
                      - header
                    properties:
                      header:
                        type: object
                        description: Header section of the JWT
                        required:
                          - alg
                          - typ
                        properties:
                          alg:
                            type: string
                            description: Algorithm used to sign the JWT (e.g., RS256, ES256).
                            example: RS256
                          typ:
                            type: string
                            description: Type of the token, usually "JWT".
                            example: JWT
                          kid:
                            type: string
                            description: Key ID hint used to select the public key to verify the JWT.
                            example: "1b94c"
                      payload:
                        type: object
                        description: Payload section of the JWT containing federation claims
                        properties:
                          iss:
                            type: string
                            format: uri
                            pattern: https
                            description: Issuer identifier for the federation.
                          sub:
                            type: string
                            description: Subject identifier for the federation entity.
                          aud:
                            type: string
                            description: Audience that the JWT is intended for.
                          exp:
                            type: integer
                            format: int64
                            description: Expiration time of the JWT as a Unix timestamp.
                          iat:
                            type: integer
                            format: int64
                            description: Issued-at time of the JWT as a Unix timestamp.
                          federation_entity_id:
                            type: string
                            format: uri
                            description: Unique identifier for the federation entity.
                        x-requirements:
                              description: |
                                `iss` must be equal to `sub`.
                      signature:
                        type: string
                        description: The signature section of the JWT, encoded in Base64.
                        example: "sQ5c3G...lZG8="